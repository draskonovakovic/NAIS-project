services:
  eureka-server:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    image: eureka-server:latest
    ports:
      - "8761:8761"
    networks:
      - my_network

  gateway-api:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    image: gateway-api:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - columnar-key-value-service
     # - graph-service
      - graph-spring-example
    ports:
      - "9000:9000"
    networks:
      - my_network

  columnar-key-value-service:
    build:
      context: ./ColumnarDatabaseService
      dockerfile: Dockerfile
    image: columnar-key-value-service:latest
    depends_on:
      - cassandradb
      - eureka-server
    restart: always
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_DATA_CASSANDRA_CONTACT_POINTS: cassandradb
      SPRING_DATA_CASSANDRA_PORT: 9042
    ports:
      - "9050:9050"
      - "5005:5005" # Debug port mapping
    networks:
      - my_network

  cassandradb:
    image: cassandra:latest
    ports:
      - "9042:9042"
    volumes:
      - data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
    networks:
      my_network:
        ipv4_address: 172.19.0.3

  cassandra-web:
    image: dcagatay/cassandra-web:latest
    depends_on:
      - cassandradb
    ports:
      - 3000:3000
    environment:
      CASSANDRA_HOST_IPS: 172.19.0.3
      CASSANDRA_PORT: 9042
    restart: unless-stopped
    networks:
      - my_network

  #datastax-studio:
   # image: datastax/dse-studio:6.8.4
    #ports:
      #- "9091:9091"
    #environment:
     # DS_LICENSE: accept
    #depends_on:
     # - cassandradb
    #networks:
     # - my_network

  graph-spring-example:
    build:
      context: ./GraphDatabaseService
      dockerfile: Dockerfile
    image: graph-spring-example:latest
    depends_on:
      - eureka-server
      - neo4j
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_NEO4J_URI: "bolt://neo4j:7687"
      SPRING_NEO4J_USERNAME: neo4j
      SPRING_NEO4J_PASSWORD: password
    ports:
      - "9051:9051"
    networks:
      - my_network

  neo4j:
    image: neo4j
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - ./data:/data
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16

volumes:
  data:
  influxdb-storage:
  grafana_storage: {}
